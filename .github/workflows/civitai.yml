name: Civitai Publish

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      hf_repo:
        description: 'Repository on HuggingFace'
        type: str
        required: true
      existing_model_id:
        description: 'Existing Model ID on CivitAI'
        type: int
        default: ''
      step:
        description: 'Step to Publish (blank means auto select)'
        type: str
        default: ''
      publish_at:
        description: 'Publish time (blank means immediately)'
        type: str
        default: ''
      nsfw:
        description: 'Upload NSFW images.'
        type: boolean
        default: true
      draft:
        description: 'Do not publish, just create a draft'
        type: boolean
        default: false
      version_name:
        description: 'Custom Name of Version'
        type: str
        default: ''

jobs:
  civitai_publish:
    name: Run Script
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependencies on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Use Draft
        if: ${{ github.event.inputs.draft == 'true' }}
        shell: bash
        run: |
          echo 'CH_P_DRAFT=--draft' >> $GITHUB_ENV
      - name: Not Use Draft
        if: ${{ github.event.inputs.draft == 'false' }}
        shell: bash
        run: |
          echo 'CH_P_DRAFT=' >> $GITHUB_ENV
      - name: Step Arguments
        if: ${{ github.event.inputs.step != '' }}
        shell: bash
        run: |
          echo 'CH_P_STEP=-s ${{ github.event.inputs.step }}'  >> $GITHUB_ENV
      - name: No Step Arguments
        if: ${{ github.event.inputs.step == '' }}
        shell: bash
        run: |
          echo 'CH_P_STEP='  >> $GITHUB_ENV
      - name: Publish Time
        if: ${{ github.event.inputs.publish_at != '' }}
        shell: bash
        run: |
          echo 'CH_P_PTIME=-T "${{ github.event.inputs.publish_at }}"' >> $GITHUB_ENV
      - name: Publish Immediately
        if: ${{ github.event.inputs.publish_at == '' }}
        shell: bash
        run: |
          echo 'CH_P_PTIME=' >> $GITHUB_ENV
      - name: Existing Model ID
        if: ${{ github.event.inputs.existing_model_id != '' }}
        shell: bash
        run: |
          echo 'CH_P_EMID=--existing_model_id "${{ github.event.inputs.existing_model_id }}"' >> $GITHUB_ENV
      - name: No Existing Model
        if: ${{ github.event.inputs.existing_model_id == '' }}
        shell: bash
        run: |
          echo 'CH_P_EMID=' >> $GITHUB_ENV
      - name: Upload NSFW Images
        if: ${{ github.event.inputs.nsfw == 'true' }}
        shell: bash
        run: |
          echo 'CH_P_NSFW=--allow_nsfw' >> $GITHUB_ENV
      - name: Not Upload NSFW Images
        if: ${{ github.event.inputs.nsfw == 'false' }}
        shell: bash
        run: |
          echo 'CH_P_NSFW=' >> $GITHUB_ENV
      - name: Use Custom Version Name
        if: ${{ github.event.inputs.version_name != '' }}
        shell: bash
        run: |
          echo 'CH_P_VERSION_NAME=--version_name "${{ github.event.inputs.version_name }}"' >> $GITHUB_ENV
      - name: Use Default Version Name
        if: ${{ github.event.inputs.version_name == '' }}
        shell: bash
        run: |
          echo 'CH_P_VERSION_NAME=' >> $GITHUB_ENV
      - name: Run Crawler
        shell: bash
        env:
          CI: 'true'
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          CIVITAI_SESSION: ${{ secrets.CIVITAI_SESSION }}
        run: |
          python -m cyberharem.publish civitai \
            -r ${{ github.event.inputs.hf_repo }} \
            ${{ env.CH_P_STEP }} ${{ env.CH_P_DRAFT }} ${{ env.CH_P_PTIME }} \
            ${{ env.CH_P_EMID }} ${{ env.CH_P_NSFW }} ${{ env.CH_P_VERSION_NAME }}
